module.exports = {
  env: {
    node: true,
    browser: true,
    es6: true,
  },
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 2018,
    sourceType: "module",
    project: "tsconfig.json",
    tsconfigRootDir: __dirname,
    sourceType: "module",
  },
  settings: {
    react: {
      version: "detect",
    },
    "import/resolver": {
      typescript: {},
    },
    "import/no-unresolved": 0,
  },
  globals: {
    Atomics: "readonly",
    SharedArrayBuffer: "readonly",
  },
  plugins: ["react", "react-hooks", "@typescript-eslint", "import"],
  extends: [
    "next/core-web-vitals",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
  ],
  ignorePatterns: ["webpack.*", "craco.config.js", "node_modules/"],
  rules: {
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-misused-promises": [
      "error",
      { checksVoidReturn: false },
    ],
    "@typescript-eslint/no-empty-function": [
      "error",
      { allow: ["arrowFunctions"] },
    ],
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/explicit-function-return-type": ["off", {}],
    "@typescript-eslint/explicit-module-boundary-types": ["off", {}],
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      { allowNullish: true, allowAny: true },
    ],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      { vars: "all", args: "after-used", ignoreRestSiblings: true },
    ],
    "max-len": [
      "warn",
      {
        code: 115,
        ignoreUrls: true,
        ignoreStrings: true,
        ignoreComments: true,
        ignoreTemplateLiterals: true,
      },
    ],
    semi: "warn",
    quotes: [
      "off",
      "single",
      { allowTemplateLiterals: true, avoidEscape: true },
    ],
    "no-multi-spaces": "warn",
    "object-curly-spacing": ["warn", "always"],
    "no-console": "warn",
    "no-multiple-empty-lines": "warn",
    "no-empty": "off",
    "jsx-quotes": "warn",
    "no-extra-semi": "off",
    "keyword-spacing": "warn",
    "arrow-spacing": "warn",
    "space-infix-ops": "warn",
    "space-before-blocks": [
      "warn",
      {
        functions: "always",
        keywords: "always",
        classes: "always",
      },
    ],
    "react/react-in-jsx-scope": "off",
    "react-hooks/rules-of-hooks": "warn",
    "react/jsx-no-comment-textnodes": "warn",
    "react-hooks/exhaustive-deps": "warn",
    "padding-line-between-statements": [
      "warn",
      { blankLine: "always", prev: "*", next: "block" },
      { blankLine: "always", prev: "block", next: "*" },
      { blankLine: "always", prev: "*", next: "block-like" },
      { blankLine: "always", prev: "block-like", next: "*" },
    ],
    "import/newline-after-import": ["warn", { count: 1 }],
  },
};
